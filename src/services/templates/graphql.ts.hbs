import { Type } from '@feathersjs/typebox/lib';
import { {{camelCase item}}Schema  } from './{{item}}.schema';
import { commonDataKeys } from '../../utils/schema-utils';

//!code extended_graphql_schema start
export const extendedSchema = Type.Intersect([
  {{camelCase item}}Schema.schema,
], { $id: '{{properCase item}}', additionalProperties: false });


TSchema = {
  ...{{camelCase item}}Schema.schema
};
export const mutationConfiguration = {
  create: {
    keys: [...commonDataKeys({{camelCase item}}Schema.schema)],
    schema: {{camelCase item}}Schema.dataSchema
  },
  patch: {
    keys: [...commonDataKeys({{camelCase item}}Schema.schema)],
    schema: {{camelCase item}}Schema.patchSchema
  },
  remove: true
  // remove: true
};
//!code extended_graphql_schema end
