import { authenticate } from '@feathersjs/authentication';

import { hooks as schemaHooks } from '@feathersjs/schema';

import { {{camelCase item}}Schema } from './{{item}}.schema';

import type { Application } from '../../declarations';
import { {{properCase item}}Service, getOptions } from './{{item}}.class';

export * from './{{item}}.class';
export * from './{{item}}.schema';

// A configure function that registers the service and its hooks via `app.configure`
export const {{item}}s = (app: Application) => {
  // Register our service on the Feathers application
  app.use('{{path}}', new {{properCase item}}Service(getOptions(app)), {
    // A list of all methods this service exposes externally
    methods: ['find', 'get', 'create', 'patch', 'remove'],
    // You can add additional custom events to be sent to clients here
    events: []
  });
  // Initialize hooks
  app.service('{{path}}').hooks({
    around: {
      all: [schemaHooks.resolveResult({{camelCase item}}Schema.resolver)]
    },
    before: {
      all: [],
      find: [],
      get: [],
      create: [{{camelCase item}}Schema.validateInput],
      patch: [],
      remove: []
    },
    after: {
      all: []
    },
    error: {
      all: []
    }
  });
};

// Add this service to the service type index
declare module '../../declarations' {
  interface ServiceTypes {
    ['{{path}}']: {{properCase item}}Service;
  }
}
