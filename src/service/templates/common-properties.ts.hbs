import { TSchema, Type } from '@feathersjs/typebox';

export const commonSchemaProperties = {
  _id: Type.String(),
  created_at: Type.String(),
  updated_at: Type.String(),
  deleted_at: Type.Optional(Type.String())
};

export const Nullable = <T extends TSchema>(schema: T) => Type.Union([schema, Type.Null()]);

export function commonDataKeys<T>(schema: TSchema):(keyof T)[]{
  return Object.keys(schema.properties).filter((key) => !Object.keys(commonSchemaProperties).includes(key)) as (keyof T)[]
}